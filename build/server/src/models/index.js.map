{"version":3,"sources":["../../../../api/server/src/models/index.js"],"names":["basename","path","__filename","env","process","NODE_ENV","config","require","__dirname","db","sequelize","use_env_variable","Sequelize","database","username","password","fs","readdirSync","filter","file","indexOf","slice","forEach","model","join","name","Object","keys","modelName","associate","module","exports"],"mappings":"AAAA;;;;AAEA;;AACA;;AACA;;AAEA,IAAMA,QAAQ,GAAGC,iBAAKD,QAAL,CAAcE,UAAd,CAAjB;;AACA,IAAMC,GAAG,GAAGC,OAAO,CAACD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;;AACA,IAAMC,MAAM,GAAGC,OAAO,CAACC,SAAS,GAAG,sBAAb,CAAP,CAA4CL,GAA5C,CAAf;;AACA,IAAMM,EAAE,GAAG,EAAX;AAEA,IAAIC,SAAJ;;AACA,IAAIJ,MAAM,CAACK,gBAAX,EAA6B;AAC3BD,EAAAA,SAAS,GAAG,IAAIE,qBAAJ,CAAcR,OAAO,CAACD,GAAR,CAAYG,MAAM,CAACK,gBAAnB,CAAd,EAAoDL,MAApD,CAAZ;AACD,CAFD,MAEO;AACLI,EAAAA,SAAS,GAAG,IAAIE,qBAAJ,CAAcN,MAAM,CAACO,QAArB,EAA+BP,MAAM,CAACQ,QAAtC,EAAgDR,MAAM,CAACS,QAAvD,EAAiET,MAAjE,CAAZ;AACD;;AAEDU,eACGC,WADH,CACeT,SADf,EAEGU,MAFH,CAEU,UAAAC,IAAI,EAAI;AACd,SAAQA,IAAI,CAACC,OAAL,CAAa,GAAb,MAAsB,CAAvB,IAA8BD,IAAI,KAAKnB,QAAvC,IAAqDmB,IAAI,CAACE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAA/E;AACD,CAJH,EAKGC,OALH,CAKW,UAAAH,IAAI,EAAI;AACf,MAAMI,KAAK,GAAGb,SAAS,CAAC,QAAD,CAAT,CAAoBT,iBAAKuB,IAAL,CAAUhB,SAAV,EAAqBW,IAArB,CAApB,CAAd;AACAV,EAAAA,EAAE,CAACc,KAAK,CAACE,IAAP,CAAF,GAAiBF,KAAjB;AACD,CARH;;AAUAG,MAAM,CAACC,IAAP,CAAYlB,EAAZ,EAAgBa,OAAhB,CAAwB,UAAAM,SAAS,EAAI;AACnC,MAAInB,EAAE,CAACmB,SAAD,CAAF,CAAcC,SAAlB,EAA6B;AAC3BpB,IAAAA,EAAE,CAACmB,SAAD,CAAF,CAAcC,SAAd,CAAwBpB,EAAxB;AACD;AACF,CAJD;AAMAA,EAAE,CAACC,SAAH,GAAeA,SAAf;AACAD,EAAE,CAACG,SAAH,GAAeA,qBAAf;AAEAkB,MAAM,CAACC,OAAP,GAAiBtB,EAAjB","sourcesContent":["'use strict';\n\nimport fs from 'fs';\nimport path from 'path';\nimport Sequelize from 'sequelize';\n\nconst basename = path.basename(__filename);\nconst env = process.env.NODE_ENV || 'development';\nconst config = require(__dirname + '/../config/config.js')[env];\nconst db = {};\n\nlet sequelize;\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\nfs\n  .readdirSync(__dirname)\n  .filter(file => {\n    return (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js');\n  })\n  .forEach(file => {\n    const model = sequelize['import'](path.join(__dirname, file));\n    db[model.name] = model;\n  });\n\nObject.keys(db).forEach(modelName => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nmodule.exports = db;\n"],"file":"index.js"}